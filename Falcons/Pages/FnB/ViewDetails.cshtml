@page
@using Newtonsoft.Json;
@model Falcons.Pages.FnB.ViewDetailsModel
@{
    if (Model.Product == null)
    {
        ViewData["Title"] = " Not Found - Food and Beverages";
    }
    else
    {
        ViewData["Title"] = Model.Product.ProductTitle + " - Food and Beverages";
    }
}
@section Styles {
    <style>
        .textColor {
            color: #cacaca;
        }
    </style>
}

@if (Model.Product != null)
{
    <div id="sys_msg"></div>
    <div class="row">
        <div class="col-md-5">
            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner" style="width:100%; height: 20em !important;">
                    @if (Model.Product != null)
                    {
                        List<string> imgURL;
                        if (!String.IsNullOrWhiteSpace(Model.Product.ImageURL))
                        {
                            imgURL = Model.Product.ImageURL.Split(",").ToList();

                            if (imgURL.Count > 1)
                            {
                                //output all image
                                for (int i = 0; i < (Model.Product.ImageURL.Split(",").ToList()).Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="carousel-item active" style="height:20em;">
                                            <img src="/assets/img/products/@imgURL[i]" class="d-block w-100">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="carousel-item" style="height:20em;">
                                            <img src="/assets/img/products/@imgURL[i]"  class="d-block w-100">
                                        </div>
                                    }
                                }
                            }
                            else
                            {
                                <div class="carousel-item active" style="max-height:100%;">
                                    <img src="/assets/img/products/@imgURL.First()" style="height:20em;" class="d-block w-100">
                                </div>
                            }
                        }
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-target="#carouselExampleIndicators" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-target="#carouselExampleIndicators" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </button>
            </div>
        </div>
        <div class="col-md-7">
            <div class="row">
                <div class="col-md-5">
                    <div class="mt-3">
                        <h3 class="textColor">@Model.Product.ProductTitle</h3>
                    </div>
                    <div class="mt-3">
                        @if (Model.ProductDetails.Count > 0)
                        {
                            <p class="h5 textColor" style="align-content:center;" id="PriceIndicator">@Model.ProductDetails.First().ProductPrice.ToString("c")</p>
                        }
                        else
                        {
                            <p class="h5 textColor" style="align-content:center;" id="PriceIndicator">N/A</p>
                        }
                    </div>
                    <div class="mt-3" style="display: flex;">

                        @if (Model.ProductDetails.Count > 0)
                        {
                            <select id="ProductSize" class="form-control ml-2">
                                @foreach (var item in Model.ProductDetails)
                                {
                                    <option value="@item.ProductDetailID">@item.Size</option>
                                }
                            </select>
                        }
                        else
                        {
                            <select class="form-control ml-2" disabled>
                                <option>No Size Available</option>
                            </select>
                        }


                    </div>
                    <button type="button" class="btn btn-warning mt-3 ml-5" id="AddToCart">Add To Cart</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-5" style="color:#ffffff;">
        <div class="col-md-12">
            <p class="h2 textColor">Description</p>
            <p class="textColor">
                @Model.Product.ProductDescription
            </p>
        </div>
    </div>
}
else
{
    <h2>Not Found !</h2>
}

@section Scripts {
    <script>
        $(function () {
            @{
                string json = JsonConvert.SerializeObject(Model.ProductDetails);
             }
            var size = @Html.Raw(json);

            //print default value

            $("#ProductSize").on("change", function () {
                let Targetsize = this.value;
                let Price = 0.00;
                for (let i = 0; i < size.length; i++) {
                    if (Targetsize == size[i].ProductDetailID) {
                        Price = size[i].ProductPrice;
                    }
                }
                $("#PriceIndicator").text("RM" + (Price + 0.00));
            });

            $("#AddToCart").click(function () {
                //get the selected item
                let TargetItem = $("#ProductSize").val();
                let quantity = 1;

                if (TargetItem != null) {
                    if (typeof (Storage) !== "undefined") {
                        let cartArray = [];

                        //check if cart json already exists
                        if (!(localStorage.getItem("FnBProductCart") == null || localStorage.getItem("FnBProductCart") == "")) {
                            cartArray = JSON.parse(localStorage.getItem("FnBProductCart"));
                        }

                        //loop in cart to find and update
                        let updateStatus = false;
                        for (let f = 0; f < cartArray.length; f++) {
                            if (cartArray[f].ProductDetailID == TargetItem) {
                                cartArray[f].quantity = cartArray[f].quantity + quantity;
                                updateStatus = true;
                            }
                        }

                        //if not found after loop then create new
                        if (!updateStatus) {
                            let cart = new Object();
                            cart.ProductDetailID = TargetItem;
                            cart.quantity = quantity;

                            //push item into array
                            cartArray.push(cart);
                        }


                        //store it and display successful message
                        localStorage.setItem("FnBProductCart", JSON.stringify(cartArray));

                        $("div#sys_msg").prepend('<div class="alert alert-success" role="alert" style="margin-top:1rem;margin-bottom:1rem;">' +
                            'Successfully added to your cart !' +
                            '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span> </button>' +
                            '</div>');
                    } else {
                        console.log("no Local Storage available");
                    }
                } else {
                    $("div#sys_msg").prepend('<div class="alert alert-danger" role="alert" style="margin-top:1rem;margin-bottom:1rem;">' +
                        'Not able to add unavailable product to cart !' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span> </button>' +
                        '</div>');
                }
            });

        });
    </script>
}
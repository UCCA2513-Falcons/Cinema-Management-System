@page
@using Newtonsoft.Json;
@model Falcons.Pages.FnB.ViewMenuDetailsModel

@{
    ViewData["Title"] = Model.Menu.PackageName;
}
@section Styles {
    <style>
        .textColor {
            color: #cacaca;
        }
    </style>
}
<div class="row">
    <div class="col-md-5">
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner" style="width:100%; height: 20em !important;">

                @if (Model.Menu != null)
                {
                    List<string> imgURL;
                    if (Model.Menu.ImageURL != null)
                    {
                        imgURL = Model.Menu.ImageURL.Split(",").ToList();

                        if (imgURL.Count > 1)
                        {
                            //output all image
                            for (int i = 0; i < (Model.Menu.ImageURL.Split(",").ToList()).Count; i++)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <img src="/assets/img/menus/@imgURL[i]" class="d-block w-100">
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img src="/assets/img/menus/@imgURL[i]" class="d-block w-100">
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            <div class="carousel-item active">
                                <img src="/assets/img/menus/@imgURL.First()" class="d-block w-100">
                            </div>
                        }
                    }

                    if (Model.Products != null)
                    {
                        foreach (var item in Model.Products)
                        {
                            List<string> ProductimgURL;
                            if (!String.IsNullOrWhiteSpace(item.ImageURL))
                            {
                                ProductimgURL = item.ImageURL.Split(",").ToList();

                                if (ProductimgURL.Count > 0)
                                {
                                    //output all product image
                                    for (int i = 0; i < ProductimgURL.Count; i++)
                                    {
                                        <div class="carousel-item">
                                            <img src="/assets/img/products/@ProductimgURL[i]" class="d-block w-100">
                                        </div>
                                    }
                                }
                            }
                        }
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-target="#carouselExampleIndicators" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-target="#carouselExampleIndicators" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </button>
        </div>
    </div>
    <div class="col-md-7">
        <div class="row">
            <div class="col-md-5">
                <div class="mt-3">
                    <h3 class="textColor">@Model.Menu.PackageName</h3>
                </div>
                <div class="mt-3">
                    <p class="h5 textColor" style="align-content:center;" id="PriceIndicator">RM 0.00</p>
                </div>
                <div class="mt-3" style="display: flex;">
                    @if (Model.Products != null)
                    {
                        foreach (var product in Model.Products)
                        {
                            var details = Model._context.ProductDetails.Where(pd => pd.ProductID == product.ProductID).ToList();
                            if (details.Count > 0)
                            {
                                <select class="form-control ml-2" name="product">
                                    @foreach (var detail in details)
                                    {
                                        <option value="@detail.ProductDetailID">@Model._context.Products.Where(pd => pd.ProductID == detail.ProductID).FirstOrDefault().ProductTitle - @detail.Size</option>
                                    }
                                </select>
                            }
                        }
                    }
                    else
                    {
                        <select disabled>
                            <option>Not Available</option>
                        </select>
                    }
                </div>
                <button type="button" class="btn btn-warning mt-3 ml-5">Add To Cart</button>
            </div>
        </div>
    </div>
</div>

<div class="row mt-5" style="color:#ffffff;">
    <div class="col-md-12">
        <p class="h2 textColor">Description</p>
        <p class="textColor">@Model.Menu.Description</p>
    </div>
</div>

@section Scripts {
    <script>
 $(function () {
            @{
                var settings = new JsonSerializerSettings()
                {
                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                };

                string json = JsonConvert.SerializeObject(Model.ProductDetails, Formatting.Indented, settings);
             }
            var size = @Html.Raw(json);
     function calculatePrice() {
         let estimatedPrice = 0;
         //calculate the estimated price
         let selectProduct = $('select[name="product"]');
         for (let i = 0; i < selectProduct.length; i++) {
             console.log(selectProduct[i]);

             for (let j = 0; j < size.length; j++) {
                 if (selectProduct[i].value == size[j].ProductDetailID) {
                     estimatedPrice += size[j].ProductPrice;
                     console.log("select : " + selectProduct[i].value + " \n Product Price : " + size[j].ProductPrice);
                 }
             }
             console.log("Total Estimated Price : " + estimatedPrice);
         }

         $("#PriceIndicator").text("RM" + (estimatedPrice));
     }

     window.onload = calculatePrice();
     $('select[name="product"]').on("change", calculatePrice);

            //print default value

            /*$("#ProductSize").on("change", function () {
                let Targetsize = this.value;
                let Price = 0.00;
                for (let i = 0; i < size.length; i++) {
                    if (Targetsize == size[i].ProductDetailID) {
                        Price = size[i].ProductPrice;
                    }
                }
                $("#PriceIndicator").text("RM" + (Price + 0.00));
            });*/

        });
    </script>
}
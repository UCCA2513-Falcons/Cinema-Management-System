@page
@model Falcons.Pages.management.FnB.Report.IndexModel
@{
    ViewData["Title"] = "Report - Food and Beverages";
}
<div class="input-group mb-5">
    <div class="input-group-prepend">
        <div class="input-group-text"><label class="control-label">Year</label></div>
    </div>
    <select id="ReportYear" asp-items="Model.YearAvailable" class="form-control"></select>
</div>
<!-- Inventory Value Report-->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Product Inventory Value</div>
            </div>
            <div class="card-body">
                <div id="chart-container">
                    <canvas id="InventoryValueLineChart" height="400px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Inventory Value Report -->
<!-- Annual Expense Report-->
<div class="row mt-3">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Annual Expenses</div>
            </div>
            <div class="card-body">
                <div id="chart-container">
                    <canvas id="AnnualExpensebarChart" height="450px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- End Annual Expense Report-->
<!-- Earning Report-->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Earning</div>
            </div>
            <div class="card-body">
                <div id="chart-container">
                    <canvas id="EarningLineChart" height="400px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Inventory Value Report -->


@section Scripts {
    <script>
        //Select Report Year
        $("select#ReportYear").on("change", function () {
            window.location.href = "/management/FnB/Report?year=" + $("select#ReportYear").val();
        });



        // Line Chart Inventory Value

        var InventoryValueLineChart = document.getElementById('InventoryValueLineChart').getContext('2d');

        var myInventoryValueLineChart = new Chart(InventoryValueLineChart, {
            type: 'line',
            data: {
                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: "Inventory Value(MYR)",
                    borderColor: "#1d7af3",
                    pointBorderColor: "#FFF",
                    pointBackgroundColor: "#1d7af3",
                    pointBorderWidth: 2,
                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 1,
                    pointRadius: 4,
                    backgroundColor: 'transparent',
                    fill: true,
                    borderWidth: 2,
                    data: [@for(int i = 0; i < Model.InventoryData.Length; i++) {
                                if(i == Model.InventoryData.Length-1)
                                {
                                    @Html.Raw(Model.InventoryData[i])
                                }
                                else
                                {
                                    @Html.Raw(Model.InventoryData[i] + ",")
                                }
                            }]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 10,
                        fontColor: '#1d7af3',
                    }
                },
                tooltips: {
                    bodySpacing: 4,
                    mode: "nearest",
                    intersect: 0,
                    position: "nearest",
                    xPadding: 10,
                    yPadding: 10,
                    caretPadding: 10
                },
                layout: {
                    padding: { left: 15, right: 15, top: 15, bottom: 15 }
                }
            }
        });

        //End Line Chart Invetory Value


        //Start Bar Chart Annual Expense

        var AnnualExpensebarChart = document.getElementById('AnnualExpensebarChart').getContext('2d');

        var myAnnualExpensebarChart = new Chart(AnnualExpensebarChart, {
            type: 'bar',
            data: {
                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: "Expenses (MYR)",
                    backgroundColor: 'rgb(23, 125, 255)',
                    borderColor: 'rgb(23, 125, 255)',
                    data: [@for(int i = 0; i < Model.AnnualExpense.Length; i++) {
                                if(i == Model.AnnualExpense.Length-1)
                                {
                                    @Html.Raw(Model.AnnualExpense[i])
                                }
                                else
                                {
                                    @Html.Raw(Model.AnnualExpense[i] + ",")
                                }
                            }],
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
            }
        });

        //End Bar Chart Annual Expense


        // Earning Line Chart

        var EarningLineChart = document.getElementById('EarningLineChart').getContext('2d');

        var myEarningLineChart = new Chart(EarningLineChart, {
            type: 'line',
            data: {
                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: "Earning (MYR)",
                    borderColor: "#1d7af3",
                    pointBorderColor: "#FFF",
                    pointBackgroundColor: "#1d7af3",
                    pointBorderWidth: 2,
                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 1,
                    pointRadius: 4,
                    backgroundColor: 'transparent',
                    fill: true,
                    borderWidth: 2,
                    data: [@for(int i = 0; i < Model.TotalEarning.Length; i++) {
                                if(i == Model.TotalEarning.Length-1)
                                {
                                    @Html.Raw(Model.TotalEarning[i])
                                }
                                else
                                {
                                    @Html.Raw(Model.TotalEarning[i] + ",")
                                }
                            }]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 10,
                        fontColor: '#1d7af3',
                    }
                },
                tooltips: {
                    bodySpacing: 4,
                    mode: "nearest",
                    intersect: 0,
                    position: "nearest",
                    xPadding: 10,
                    yPadding: 10,
                    caretPadding: 10
                },
                layout: {
                    padding: { left: 15, right: 15, top: 15, bottom: 15 }
                }
            }
        });

        //End Earning Line Chart
    </script>
}
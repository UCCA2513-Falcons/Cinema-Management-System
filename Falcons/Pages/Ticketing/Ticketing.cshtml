@page
@model Falcons.Pages.Ticketing.TicketingModel
@{
    ViewData["Title"] = "Book Ticket";
}

@section Styles{
    <link href="~/jQuery-Seat-Chart/jquery.seat-charts.css" rel="stylesheet" />
}

<section>
    <div class="section-title" style="margin-top: 20px;">
        <h4>Book Your Ticket Now</h4>
    </div>
</section>

<section class="book-ticket">
    <div class="container">
        <div class="col-lg-12">



            <div class="seat">

                <div class="container" style="margin-top: 20px;">
                    <div style="text-align:center;">Screen Here</div>
                    <div class="screen" style="background-color: dimgray; height: 10px; width:80%; margin:auto; box-shadow: 0 3px 10px rgba(255, 255, 255, 0.7); align-content:center;"> </div>
                </div>
            </div>

            <div class="d-flex justify-content-center align-content-center">
                <div class="wrapper">

                    <div class="container-fluid">

                        <div id="seat-map" style="margin-top: 50px;">
                        </div>

                        <div class="booking-details">

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div>
                    <form name="bookform" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly"></div>
                        
                        <div>

                            <div class="form-group" style="color: black; margin-top: 30dp;">
                                <label asp-for="Movie.MovieName" hidden></label>
                                <select asp-for="Movie.MovieID" asp-items="Model.movieOpt">Select A Movie</select>
                                <span asp-validation-for="Movie.MovieName" class="text-danger"></span>
                            </div>

                            @*<div class="form-group">
            <label class="control-label">Date</label>
             <input asp-for="booking.username" value="@User.Identities.username"/>
        </div>*@

                            @* <div class="form-group" style="color: black;">
            <label asp-for="Movie.MovieID" class="control-label" hidden></label>
            @if(Model.Movie != null)
            {
                foreach(var mov in Model.movies)
                {
                    var mov =
                }
            }

        </div>*@

                            <div class="form-group" style="color: black;">
                                <label asp-for="Movie.MovieID" class="control-label" hidden></label>
                                <select asp-for="Movie.MovieID" asp-items="@(new SelectList(Model.showtimes, "ShowtimeID", "StartTime"))" class="form-select" style="color: black;">Select Time</select>

                            </div>


                            <div class="form-group" style="color: black;">

                                <label class="control-label">Ticket</label>
                                <select asp-for="booking.ticketType" class="form-select" style="color: black;">
                                    <option>Select Ticket Type</option>
                                    <option price="14">Adult Ticket</option>
                                    <option price="8">Children Ticket</option>
                                </select>

                                <span asp-validation-for="booking.ticketType"></span>

                            </div>


                            <div class="form-group hid" style="color: black;">
                                <label class="control-label">Seat</label>
                                <select asp-for="SR.seats" class="dSelect form-select Gseat" onchange="getvalseat(this);" style="color: black;">
                                    <option disabled>Select seat</option>
                                    <option value="1_1">A1</option>
                                    <option value="1_2">A2</option>
                                    <option value="1_3">A3</option>
                                    <option value="1_4">A4</option>
                                    <option value="1_5">A5</option>
                                    <option value="1_6">A6</option>
                                    <option value="1_7">A7</option>
                                    <option value="1_8">A8</option>
                                    <option value="1_9">A9</option>
                                    <option value="1_10">A10</option>
                                    <option value="1_11">A11</option>
                                    <option value="1_12">A12</option>
                                    <option value="1_13">A13</option>

                                    <option value="2_1">B1</option>
                                    <option value="2_2">B2</option>
                                    <option value="2_3">B3</option>
                                    <option value="2_4">B4</option>
                                    <option value="2_5">B5</option>
                                    <option value="2_6">B6</option>
                                    <option value="2_7">B7</option>
                                    <option value="2_8">B8</option>
                                    <option value="2_9">B9</option>
                                    <option value="2_10">B10</option>
                                    <option value="2_11">B11</option>
                                    <option value="2_12">B12</option>
                                    <option value="2_13">B13</option>

                                    <option value="3_1">C1</option>
                                    <option value="3_2">C2</option>
                                    <option value="3_3">C3</option>
                                    <option value="3_4">C4</option>
                                    <option value="3_5">C5</option>
                                    <option value="3_6">C6</option>
                                    <option value="3_7">C7</option>
                                    <option value="3_8">C8</option>
                                    <option value="3_9">C9</option>
                                    <option value="3_10">C10</option>
                                    <option value="3_11">C11</option>
                                    <option value="3_12">C12</option>
                                    <option value="3_13">C13</option>

                                    <option value="4_1">D1</option>
                                    <option value="4_2">D2</option>
                                    <option value="4_3">D3</option>
                                    <option value="4_4">D4</option>
                                    <option value="4_5">D5</option>
                                    <option value="4_6">D6</option>
                                    <option value="4_7">D7</option>
                                    <option value="4_8">D8</option>
                                    <option value="4_9">D9</option>
                                    <option value="4_10">D10</option>
                                    <option value="4_11">D11</option>
                                    <option value="4_12">D12</option>
                                    <option value="4_13">D13</option>

                                    <option value="5_1">E1</option>
                                    <option value="5_2">E2</option>
                                    <option value="5_3">E3</option>
                                    <option value="5_4">E4</option>
                                    <option value="5_5">E5</option>
                                    <option value="5_6">E6</option>
                                    <option value="5_7">E7</option>
                                    <option value="5_8">E8</option>
                                    <option value="5_9">E9</option>
                                    <option value="5_10">E10</option>
                                    <option value="5_11">E11</option>
                                    <option value="5_12">E12</option>
                                    <option value="5_13">E13</option>

                                </select>
                                <span asp-validation-for="SR.seats"></span>
                            </div>


                            <!--Button for booking-->

                            <div class="form-group">
                                <button value="Book" type="button" class="button btn">Proceed to Payment</button>

                            </div>

                        </div>


                    </form>
                </div>
            </div>


        </div>
    </div>



</section>

@section Scripts{

    <script src="~/jQuery-Seat-Chart/jquery.seat-charts.js"></script>

    <script>
    var firstSeatLabel = 1;

        $(document).ready(function () {
            var $cart = $('#selected-seats'),
                $counter = $('#counter'),
                $total = $('#total'),
                sc = $('#seat-map').seatCharts({
                    map: [
                        'nnnnnnnnnnnnn',
                        'nnnnnnnnnnnnn',
                        'nnnnnnnnnnnnn',
                        'nnnnnnnnnnnnn',
                        'ccccccccccccc'
                    ],
                    seats: {
                        n: {
                            //price: 14,
                            classes: 'normal-ticket', //your custom CSS class
                            category: 'Adult'
                        },

                        c: {
                            //price: 25,
                            classes: 'twin-seat',
                            category: 'Twin Seat'
                        }

                    },
                    naming: {
                        top: false,
                        getLabel: function (character, row, column) {
                            return firstSeatLabel++;
                        },
                    },
                    legend: {
                        node: $('#legend'),
                        items: [
                            ['f', 'available', 'Adult Ticket'],
                            ['f', 'unavailable', 'Sold']
                        ]
                    },
                    click: function () {
                        if (this.status() == 'available') {
                            //let's create a new <li> which we'll add to the cart items
                            $('<li>' + this.data().category + ' Seat # ' + this.settings.label + ': <b>RM ' + this.data().price + '</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
                                .attr('id', 'cart-item-' + this.settings.id)
                                .data('seatId', this.settings.id)
                                .data('seatPrice', this.data().price)
                                .appendTo($cart);

                            /*
                             * Lets update the counter and total
                             *
                             * .find function will not find the current seat, because it will change its stauts only after return
                             * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
                             */
                            $counter.text(sc.find('selected').length + 1);
                            $total.text(recalculateTotal(sc) + this.data().price);

                            return 'selected';
                        } else if (this.status() == 'selected') {
                            //update the counter
                            $counter.text(sc.find('selected').length - 1);
                            //and total
                            $total.text(recalculateTotal(sc) - this.data().price);

                            //remove the item from our cart
                            $('#cart-item-' + this.settings.id).remove();

                            //seat has been vacated
                            return 'available';
                        } else if (this.status() == 'unavailable') {
                            //seat has been already booked
                            return 'unavailable';
                        } else {
                            return this.style();
                        }
                    }
                });

            //this will handle "[cancel]" link clicks
            $('#selected-seats').on('click', '.cancel-cart-item', function () {
                //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
                sc.get($(this).parents('li:first').data('seatId')).click();
            });

            //let's pretend some seats have already been booked
            //sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');
            @*sc.get(@Html.Raw(SerializedBookedIDs)).status('unavailable');*@

        });

        function recalculateTotal(sc) {
            var total = 0;

            //basically find every selected seat and sum its price
            sc.find('selected').each(function () {
                total += this.data().price;
            });

            return total;
        }

    </script>
}
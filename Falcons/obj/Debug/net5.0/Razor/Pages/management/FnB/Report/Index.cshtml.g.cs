#pragma checksum "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1bf991bd1cc2110dd1ba61b9175f34f43911c62a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Falcons.Pages.management.FnB.Report.Pages_management_FnB_Report_Index), @"mvc.1.0.razor-page", @"/Pages/management/FnB/Report/Index.cshtml")]
namespace Falcons.Pages.management.FnB.Report
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\_ViewImports.cshtml"
using Falcons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\_ViewImports.cshtml"
using Falcons.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1bf991bd1cc2110dd1ba61b9175f34f43911c62a", @"/Pages/management/FnB/Report/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eda54c565b70cf76a129e71347f29674895644bf", @"/Pages/_ViewImports.cshtml")]
    public class Pages_management_FnB_Report_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
  
    Layout = "_ManagementLayout";
    ViewData["Title"] = "Report";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- Inventory Value Report-->
<div class=""row"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                <div class=""card-title"">Product Inventory Value</div>
            </div>
            <div class=""card-body"">
                <div id=""chart-container"">
                    <canvas id=""InventoryValueLineChart"" height=""400px""></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Inventory Value Report -->
<!-- Annual Expense Report-->
<div class=""row mt-3"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                <div class=""card-title"">Annual Expenses</div>
            </div>
            <div class=""card-body"">
                <div id=""chart-container"">
                    <canvas id=""AnnualExpensebarChart"" height=""450px""></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- End Annual Expense R");
            WriteLiteral(@"eport-->
<!-- Earning Report-->
<div class=""row"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div class=""card-header"">
                <div class=""card-title"">Earning</div>
            </div>
            <div class=""card-body"">
                <div id=""chart-container"">
                    <canvas id=""EarningLineChart"" height=""400px""></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Inventory Value Report -->


");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>

        // Line Chart Inventory Value

        var InventoryValueLineChart = document.getElementById('InventoryValueLineChart').getContext('2d');

        var myInventoryValueLineChart = new Chart(InventoryValueLineChart, {
            type: 'line',
            data: {
                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                datasets: [{
                    label: ""Inventory Value(MYR)"",
                    borderColor: ""#1d7af3"",
                    pointBorderColor: ""#FFF"",
                    pointBackgroundColor: ""#1d7af3"",
                    pointBorderWidth: 2,
                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 1,
                    pointRadius: 4,
                    backgroundColor: 'transparent',
                    fill: true,
                    borderWidth: 2,
                    data: [");
#nullable restore
#line 82 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                            for(int i = 0; i < Model.InventoryData.Length; i++) {
                                if(i == Model.InventoryData.Length-1)
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 85 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.InventoryData[i]));

#line default
#line hidden
#nullable disable
#nullable restore
#line 85 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                     
                                }
                                else
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 89 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.InventoryData[i] + ","));

#line default
#line hidden
#nullable disable
#nullable restore
#line 89 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                           
                                }
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 10,
                        fontColor: '#1d7af3',
                    }
                },
                tooltips: {
                    bodySpacing: 4,
                    mode: ""nearest"",
                    intersect: 0,
                    position: ""nearest"",
                    xPadding: 10,
                    yPadding: 10,
                    caretPadding: 10
                },
                layout: {
                    padding: { left: 15, right: 15, top: 15, bottom: 15 }
                }
            }
        });

        //End Line Chart Invetory Value


        //Start Bar Chart Annual Expense

        var AnnualExpensebarChart = document.getElementById('AnnualExpensebarChart').getContext('2d');
");
                WriteLiteral(@"
        var myAnnualExpensebarChart = new Chart(AnnualExpensebarChart, {
            type: 'bar',
            data: {
                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                datasets: [{
                    label: ""Expenses (MYR)"",
                    backgroundColor: 'rgb(23, 125, 255)',
                    borderColor: 'rgb(23, 125, 255)',
                    data: [");
#nullable restore
#line 134 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                            for(int i = 0; i < Model.AnnualExpense.Length; i++) {
                                if(i == Model.AnnualExpense.Length-1)
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 137 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.AnnualExpense[i]));

#line default
#line hidden
#nullable disable
#nullable restore
#line 137 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                     
                                }
                                else
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 141 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.AnnualExpense[i] + ","));

#line default
#line hidden
#nullable disable
#nullable restore
#line 141 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                           
                                }
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"],
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
            }
        });

        //End Bar Chart Annual Expense


        // Earning Line Chart

        var EarningLineChart = document.getElementById('EarningLineChart').getContext('2d');

        var myEarningLineChart = new Chart(EarningLineChart, {
            type: 'line',
            data: {
                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                datasets: [{
                    label: ""Earning (MYR)"",
                    borderColor: ""#1d7af3"",
                    pointBorderColor: ""#FFF"",
                    pointBackgroundColor: ""#1d7af3"",
                    po");
                WriteLiteral(@"intBorderWidth: 2,
                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 1,
                    pointRadius: 4,
                    backgroundColor: 'transparent',
                    fill: true,
                    borderWidth: 2,
                    data: [");
#nullable restore
#line 182 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                            for(int i = 0; i < Model.TotalEarning.Length; i++) {
                                if(i == Model.TotalEarning.Length-1)
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 185 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.TotalEarning[i]));

#line default
#line hidden
#nullable disable
#nullable restore
#line 185 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                    
                                }
                                else
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 189 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                               Write(Html.Raw(Model.TotalEarning[i] + ","));

#line default
#line hidden
#nullable disable
#nullable restore
#line 189 "C:\Users\User\Documents\GitHub\Cinema-Management-System\Falcons\Pages\management\FnB\Report\Index.cshtml"
                                                                          
                                }
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 10,
                        fontColor: '#1d7af3',
                    }
                },
                tooltips: {
                    bodySpacing: 4,
                    mode: ""nearest"",
                    intersect: 0,
                    position: ""nearest"",
                    xPadding: 10,
                    yPadding: 10,
                    caretPadding: 10
                },
                layout: {
                    padding: { left: 15, right: 15, top: 15, bottom: 15 }
                }
            }
        });

        //End Earning Line Chart
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Falcons.Pages.management.FnB.Report.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Falcons.Pages.management.FnB.Report.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Falcons.Pages.management.FnB.Report.IndexModel>)PageContext?.ViewData;
        public Falcons.Pages.management.FnB.Report.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
